// <auto-generated />
using System;
using LanceCerto.WebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LanceCerto.WebApp.Migrations
{
    [DbContext(typeof(LanceCertoDbContext))]
    [Migration("20250430175243_AddDataNascimentoToUsuario")]
    partial class AddDataNascimentoToUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LanceCerto.WebApp.Models.Imovel", b =>
                {
                    b.Property<int>("ImovelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImovelId"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecoMinimo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ImovelId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Imoveis", (string)null);
                });

            modelBuilder.Entity("LanceCerto.WebApp.Models.ImovelFavorito", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("ImovelId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "ImovelId");

                    b.HasIndex("ImovelId");

                    b.ToTable("ImoveisFavoritos", (string)null);
                });

            modelBuilder.Entity("LanceCerto.WebApp.Models.Lance", b =>
                {
                    b.Property<int>("LanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanceId"));

                    b.Property<int>("LeilaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MomentoLance")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorLance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("LanceId");

                    b.HasIndex("LeilaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Lances", (string)null);
                });

            modelBuilder.Entity("LanceCerto.WebApp.Models.Leilao", b =>
                {
                    b.Property<int>("LeilaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeilaoId"));

                    b.Property<DateTime>("FimEm")
                        .HasColumnType("datetime2");

                    b.Property<int>("ImovelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InicioEm")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MaiorLanceAtual")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VencedorId")
                        .HasColumnType("int");

                    b.HasKey("LeilaoId");

                    b.HasIndex("ImovelId");

                    b.HasIndex("VencedorId");

                    b.ToTable("Leiloes", (string)null);
                });

            modelBuilder.Entity("LanceCerto.WebApp.Models.Mensagem", b =>
                {
                    b.Property<int>("MensagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MensagemId"));

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DestinatarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnviadaEm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ImovelRelacionadoId")
                        .HasColumnType("int");

                    b.Property<int>("RemetenteId")
                        .HasColumnType("int");

                    b.HasKey("MensagemId");

                    b.HasIndex("DestinatarioId");

                    b.HasIndex("ImovelRelacionadoId");

                    b.HasIndex("RemetenteId");

                    b.ToTable("Mensagens", (string)null);
                });

            modelBuilder.Entity("LanceCerto.WebApp.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Creci")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EhCorretor")
                        .HasColumnType("bit");

                    b.Property<bool>("EhVendedor")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("LanceCerto.WebApp.Models.Imovel", b =>
                {
                    b.HasOne("LanceCerto.WebApp.Models.Usuario", "Usuario")
                        .WithMany("Imoveis")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LanceCerto.WebApp.Models.ImovelFavorito", b =>
                {
                    b.HasOne("LanceCerto.WebApp.Models.Imovel", "Imovel")
                        .WithMany()
                        .HasForeignKey("ImovelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LanceCerto.WebApp.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Imovel");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LanceCerto.WebApp.Models.Lance", b =>
                {
                    b.HasOne("LanceCerto.WebApp.Models.Leilao", "Leilao")
                        .WithMany()
                        .HasForeignKey("LeilaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LanceCerto.WebApp.Models.Usuario", "Usuario")
                        .WithMany("Lances")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leilao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LanceCerto.WebApp.Models.Leilao", b =>
                {
                    b.HasOne("LanceCerto.WebApp.Models.Imovel", "Imovel")
                        .WithMany()
                        .HasForeignKey("ImovelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LanceCerto.WebApp.Models.Usuario", "Vencedor")
                        .WithMany()
                        .HasForeignKey("VencedorId");

                    b.Navigation("Imovel");

                    b.Navigation("Vencedor");
                });

            modelBuilder.Entity("LanceCerto.WebApp.Models.Mensagem", b =>
                {
                    b.HasOne("LanceCerto.WebApp.Models.Usuario", "Destinatario")
                        .WithMany()
                        .HasForeignKey("DestinatarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LanceCerto.WebApp.Models.Imovel", "ImovelRelacionado")
                        .WithMany()
                        .HasForeignKey("ImovelRelacionadoId");

                    b.HasOne("LanceCerto.WebApp.Models.Usuario", "Remetente")
                        .WithMany()
                        .HasForeignKey("RemetenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destinatario");

                    b.Navigation("ImovelRelacionado");

                    b.Navigation("Remetente");
                });

            modelBuilder.Entity("LanceCerto.WebApp.Models.Usuario", b =>
                {
                    b.Navigation("Imoveis");

                    b.Navigation("Lances");
                });
#pragma warning restore 612, 618
        }
    }
}
